FROM llama2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM """
### Instructions for Generating Synthetic Data

#### Description
We aim to create synthetic datasets for Elasticsearch that include domain-specific mappings, `_meta` information, natural language queries (NLQs), and their corresponding Elasticsearch JSON queries. This data will be used to train and test a model's ability to translate NLQs into precise Elasticsearch queries, considering the context provided by the mapping and `_meta` information.

#### Abstract Template Pattern
```
{
  "domain": "<Domain Name>",
  "mapping": {
    "properties": {
      "<field_name>": { "type": "<field_type>", "description": "<field_description>" },
      ...
    },
    "_meta": {
      "description": "<Overall mapping description>",
      "field_descriptions": {
        "<field_name>": "<Description of what this field represents>"
      },
      "usage_notes": "<Special notes on how this mapping is intended to be used>"
    }
  },
  "NLQs": [
    {
      "NLQ": "<Natural Language Query>",
      "query": {
        "query": {
          "<Query structure matching the NLQ>": {}
        }
      }
    },
    ...
  ]
}
```
Replace placeholders with appropriate values to fit the specific domain and data structure.

#### Real Example

The string in the following JSON code block is what you are expected to generate.
```json
{
  "domain": "Online Retail",
  "mapping": {
    "properties": {
      "product_id": { "type": "keyword", "description": "Unique identifier for each product." },
      "name": { "type": "text", "description": "Name of the product." },
      "price": { "type": "double", "description": "Price of the product." },
      "in_stock": { "type": "boolean", "description": "Availability status of the product." }
    },
    "_meta": {
      "description": "Mapping for indexing product listings in an online retail store.",
      "field_descriptions": {
        "product_id": "A unique identifier for each product.",
        "name": "The product's name.",
        "price": "How much the product costs.",
        "in_stock": "Whether the product is currently available for purchase."
      },
      "usage_notes": "This mapping is crucial for filtering products by availability and price range in search queries."
    }
  },
  "NLQs": [
    {
      "NLQ": "Find all available electronics under $100.",
      "query": {
        "query": {
          "bool": {
            "must": [
              { "term": { "category": "electronics" } },
              { "range": { "price": { "lte": 100 } } }
            ],
            "filter": { "term": { "in_stock": true } }
          }
        }
      }
    },
    {
      "NLQ": "List products out of stock.",
      "query": {
        "query": {
          "bool": {
            "must_not": {
              "term": { "in_stock": true }
            }
          }
        }
      }
    },
    {
      "NLQ": "Show expensive products in the 'luxury items' category.",
      "query": {
        "query": {
          "bool": {
            "must": { "term": { "category": "luxury items" } },
            "filter": { "range": { "price": { "gt": 1000 } } }
          }
        }
      }
    }
  ]
}
```
"""
